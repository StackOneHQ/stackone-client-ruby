# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class AdditionalData < ::Crystalline::FieldAugmented
      extend T::Sig

      # The name of the additional data field. Speak to your Solutions Engineer to understand the id for the specific use case
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
      # Provider's unique identifier
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('remote_id') } }
      # The value of the additional data
      field :value, T.nilable(::Object), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('value') } }


      sig { params(id: T.nilable(::String), remote_id: T.nilable(::String), value: T.nilable(::Object)).void }
      def initialize(id: nil, remote_id: nil, value: nil)
        @id = id
        @remote_id = remote_id
        @value = value
      end
    end
  end
end
