# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class Security
        extend T::Sig
        include Crystalline::MetadataFields


        field :password, ::String, { 'security': { 'scheme': true, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' } }

        field :username, ::String, { 'security': { 'scheme': true, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' } }


        sig { params(password: ::String, username: ::String).void }
        def initialize(password: nil, username: nil)
          @password = password
          @username = username
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @password == other.password
          return false unless @username == other.username
          true
        end
      end
    end
  end
end
