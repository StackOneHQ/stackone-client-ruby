# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class ScreeningOrderCandidate
        extend T::Sig
        include Crystalline::MetadataFields

        # Candidate email
        field :email, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('email') } }
        # Candidate first name
        field :first_name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('first_name') } }
        # Candidate last name
        field :last_name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('last_name') } }


        sig { params(email: T.nilable(::String), first_name: T.nilable(::String), last_name: T.nilable(::String)).void }
        def initialize(email: nil, first_name: nil, last_name: nil)
          @email = email
          @first_name = first_name
          @last_name = last_name
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @email == other.email
          return false unless @first_name == other.first_name
          return false unless @last_name == other.last_name
          true
        end
      end
    end
  end
end
