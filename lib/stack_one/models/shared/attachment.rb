# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class Attachment
        extend T::Sig
        include Crystalline::MetadataFields


        field :content_type, T.nilable(Models::Shared::AttachmentContentType), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content_type') } }
        # The URL of the attachment.
        field :url, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('url') } }


        sig { params(content_type: T.nilable(Models::Shared::AttachmentContentType), url: T.nilable(::String)).void }
        def initialize(content_type: nil, url: nil)
          @content_type = content_type
          @url = url
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @content_type == other.content_type
          return false unless @url == other.url
          true
        end
      end
    end
  end
end
