# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class AtsCreateBackgroundCheckOrderRequestDto < ::Crystalline::FieldAugmented
      extend T::Sig


      field :application, T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoApplication), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('application') } }

      field :candidate, T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoCandidate), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('candidate') } }
      # Unique identifier
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }

      field :job, T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoJob), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('job') } }

      field :package, T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoPackage), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('package') } }
      # Value to pass through to the provider
      field :passthrough, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('passthrough') } }
      # Provider's unique identifier
      field :remote_id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('remote_id') } }

      field :requester, T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoRequester), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('requester') } }
      # Results update url
      field :results_update_url, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('results_update_url') } }


      sig { params(application: T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoApplication), candidate: T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoCandidate), id: T.nilable(::String), job: T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoJob), package: T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoPackage), passthrough: T.nilable(T::Hash[Symbol, ::Object]), remote_id: T.nilable(::String), requester: T.nilable(::StackOne::Shared::AtsCreateBackgroundCheckOrderRequestDtoRequester), results_update_url: T.nilable(::String)).void }
      def initialize(application: nil, candidate: nil, id: nil, job: nil, package: nil, passthrough: nil, remote_id: nil, requester: nil, results_update_url: nil)
        @application = application
        @candidate = candidate
        @id = id
        @job = job
        @package = package
        @passthrough = passthrough
        @remote_id = remote_id
        @requester = requester
        @results_update_url = results_update_url
      end
    end
  end
end
