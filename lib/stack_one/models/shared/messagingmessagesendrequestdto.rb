# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class MessagingMessageSendRequestDto
        extend T::Sig
        include Crystalline::MetadataFields

        # Content body of the message
        field :content, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content') } }
        # Can be a conversation ID, user ID, email or phone number.
        field :recipient, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('recipient') } }
        # The account_id or phone number of the message sender
        field :sender, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('sender') } }


        sig { params(content: T.nilable(::String), recipient: T.nilable(::String), sender: T.nilable(::String)).void }
        def initialize(content: nil, recipient: nil, sender: nil)
          @content = content
          @recipient = recipient
          @sender = sender
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @content == other.content
          return false unless @recipient == other.recipient
          return false unless @sender == other.sender
          true
        end
      end
    end
  end
end
