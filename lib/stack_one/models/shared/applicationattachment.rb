# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class ApplicationAttachment
        extend T::Sig
        include Crystalline::MetadataFields

        # The content of the attachment.
        field :content, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content') } }

        field :content_type, Crystalline::Nilable.new(Models::Shared::ContentType), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content_type') } }
        # The file name of the attachment.
        field :file_name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('file_name') } }
        # The URL of the attachment.
        field :url, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('url') } }

        sig { params(content: T.nilable(::String), content_type: T.nilable(Models::Shared::ContentType), file_name: T.nilable(::String), url: T.nilable(::String)).void }
        def initialize(content: nil, content_type: nil, file_name: nil, url: nil)
          @content = content
          @content_type = content_type
          @file_name = file_name
          @url = url
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @content == other.content
          return false unless @content_type == other.content_type
          return false unless @file_name == other.file_name
          return false unless @url == other.url
          true
        end
      end
    end
  end
end
