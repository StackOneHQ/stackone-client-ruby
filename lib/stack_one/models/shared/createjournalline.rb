# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class CreateJournalLine
        extend T::Sig
        include Crystalline::MetadataFields

        # ID of the ledger account this line references
        field :account_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('account_id') } }
        # Amount of the journal line in minor units, e.g. 10010 for 100.10 USD. Positive for debit, negative for credit
        field :amount, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('amount') } }
        # Description of the journal line
        field :description, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('description') } }
        # Tax amount of the line in minor units, e.g. 10010 for 100.10 USD
        field :tax_amount, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('tax_amount') } }
        # ID of the tax rate applied
        field :tax_rate_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('tax_rate_id') } }

        sig { params(account_id: T.nilable(::String), amount: T.nilable(::Float), description: T.nilable(::String), tax_amount: T.nilable(::Float), tax_rate_id: T.nilable(::String)).void }
        def initialize(account_id: nil, amount: nil, description: nil, tax_amount: nil, tax_rate_id: nil)
          @account_id = account_id
          @amount = amount
          @description = description
          @tax_amount = tax_amount
          @tax_rate_id = tax_rate_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @account_id == other.account_id
          return false unless @amount == other.amount
          return false unless @description == other.description
          return false unless @tax_amount == other.tax_amount
          return false unless @tax_rate_id == other.tax_rate_id
          true
        end
      end
    end
  end
end
