# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class WorkTime
        extend T::Sig
        include Crystalline::MetadataFields

        # The work time duration in ISO 8601 duration format
        field :duration, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('duration') } }
        # The period of the work time
        field :period, Crystalline::Nilable.new(Models::Shared::Period), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('period') } }

        sig { params(duration: T.nilable(::String), period: T.nilable(Models::Shared::Period)).void }
        def initialize(duration: nil, period: nil)
          @duration = duration
          @period = period
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @duration == other.duration
          return false unless @period == other.period
          true
        end
      end
    end
  end
end
