# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    
      # Content of the message
      class MessagingMessageContent
        extend T::Sig
        include Crystalline::MetadataFields

        # HTML content of the message
        field :html, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('html') } }
        # Plain text content of the message
        field :plain, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('plain') } }

        sig { params(html: T.nilable(::String), plain: T.nilable(::String)).void }
        def initialize(html: nil, plain: nil)
          @html = html
          @plain = plain
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @html == other.html
          return false unless @plain == other.plain
          true
        end
      end
    end
  end
end
