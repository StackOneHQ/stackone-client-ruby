# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class PhoneNumber
        extend T::Sig
        include Crystalline::MetadataFields

        # Phone number string
        field :phone, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('phone') } }
        # Type of phone number
        field :type, T.nilable(Models::Shared::PhoneNumberType), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('type'), 'decoder': Utils.enum_from_string(Models::Shared::PhoneNumberType, true) } }


        sig { params(phone: T.nilable(::String), type: T.nilable(Models::Shared::PhoneNumberType)).void }
        def initialize(phone: nil, type: nil)
          @phone = phone
          @type = type
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @phone == other.phone
          return false unless @type == other.type
          true
        end
      end
    end
  end
end
