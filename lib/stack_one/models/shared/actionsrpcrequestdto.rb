# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class ActionsRpcRequestDto
        extend T::Sig
        include Crystalline::MetadataFields

        # The action to execute
        field :action, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('action'), required: true } }
        # Input parameters for the action
        field :input, Crystalline::Nilable.new(Models::Shared::Input), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('input') } }

        sig { params(action: ::String, input: T.nilable(Models::Shared::Input)).void }
        def initialize(action:, input: nil)
          @action = action
          @input = input
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @action == other.action
          return false unless @input == other.input
          true
        end
      end
    end
  end
end
