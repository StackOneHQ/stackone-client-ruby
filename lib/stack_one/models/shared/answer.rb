# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class Answer < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # Unique identifier of the answer
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
      # Type of the answer
      field :type, T.nilable(::StackOne::Shared::Type), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('type') } }
      # Values of the answer
      field :values, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('values') } }


      sig { params(id: T.nilable(::String), type: T.nilable(::StackOne::Shared::Type), values: T.nilable(T::Array[::String])).void }
      def initialize(id: nil, type: nil, values: nil)
        @id = id
        @type = type
        @values = values
      end
    end
  end
end
