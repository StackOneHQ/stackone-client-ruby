# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class CreateEventResponse < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # The event name
      field :event, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('event') } }
      # The record id associated with the event
      field :record_id, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('record_id') } }
      # The response http status code
      field :status, ::Float, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('status') } }
      # The message associated with the operation result
      field :message, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('message') } }


      sig { params(event: ::String, record_id: ::String, status: ::Float, message: T.nilable(::String)).void }
      def initialize(event: nil, record_id: nil, status: nil, message: nil)
        @event = event
        @record_id = record_id
        @status = status
        @message = message
      end
    end
  end
end
