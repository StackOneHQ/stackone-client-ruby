# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class BackgroundCheckOrderApplication < ::StackOne::Utils::FieldAugmented
      extend T::Sig


      field :application_status, T.nilable(::StackOne::Shared::BackgroundCheckOrderApplicationStatus), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('application_status') } }
      # Unique identifier
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
      # Value to pass through to the provider
      field :passthrough, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('passthrough') } }


      sig { params(application_status: T.nilable(::StackOne::Shared::BackgroundCheckOrderApplicationStatus), id: T.nilable(::String), passthrough: T.nilable(T::Hash[Symbol, ::Object])).void }
      def initialize(application_status: nil, id: nil, passthrough: nil)
        @application_status = application_status
        @id = id
        @passthrough = passthrough
      end
    end
  end
end
