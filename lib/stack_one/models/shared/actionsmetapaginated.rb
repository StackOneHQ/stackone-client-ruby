# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class ActionsMetaPaginated
        extend T::Sig
        include Crystalline::MetadataFields

        # The list of actions metadata
        field :data, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::ActionsMeta)), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('data') } }
        # Cursor for fetching the next page of results
        field :next_, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('next') } }

        sig { params(data: T.nilable(T::Array[Models::Shared::ActionsMeta]), next_: T.nilable(::String)).void }
        def initialize(data: nil, next_: nil)
          @data = data
          @next_ = next_
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @data == other.data
          return false unless @next_ == other.next_
          true
        end
      end
    end
  end
end
