# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class AtsCreateNotesRequestDto < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # Unique identifier of the author
      field :author_id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('author_id') } }

      field :content, T.nilable(T::Array[::StackOne::Shared::NoteContentApiModel]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content') } }
      # Visibility of the note
      field :visibility, T.nilable(::StackOne::Shared::Visibility), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('visibility') } }


      sig { params(author_id: T.nilable(::String), content: T.nilable(T::Array[::StackOne::Shared::NoteContentApiModel]), visibility: T.nilable(::StackOne::Shared::Visibility)).void }
      def initialize(author_id: nil, content: nil, visibility: nil)
        @author_id = author_id
        @content = content
        @visibility = visibility
      end
    end
  end
end
