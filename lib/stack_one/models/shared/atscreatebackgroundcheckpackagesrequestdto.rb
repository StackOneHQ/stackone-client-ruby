# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class AtsCreateBackgroundCheckPackagesRequestDto < ::Crystalline::FieldAugmented
      extend T::Sig

      # Package description
      field :description, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('description') } }
      # Package name
      field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('name') } }
      # Value to pass through to the provider
      field :passthrough, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('passthrough') } }
      # Package tests
      field :tests, T.nilable(T::Array[::StackOne::Shared::CreatePackage]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('tests') } }


      sig { params(description: T.nilable(::String), name: T.nilable(::String), passthrough: T.nilable(T::Hash[Symbol, ::Object]), tests: T.nilable(T::Array[::StackOne::Shared::CreatePackage])).void }
      def initialize(description: nil, name: nil, passthrough: nil, tests: nil)
        @description = description
        @name = name
        @passthrough = passthrough
        @tests = tests
      end
    end
  end
end
