# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class Score < ::Crystalline::FieldAugmented
      extend T::Sig

      # The label of the score
      field :label, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('label') } }
      # The maximum value of the score
      field :max, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('max') } }
      # The minimum value of the score
      field :min, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('min') } }
      # The value is the actual score
      field :value, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('value') } }


      sig { params(label: T.nilable(::String), max: T.nilable(::String), min: T.nilable(::String), value: T.nilable(::String)).void }
      def initialize(label: nil, max: nil, min: nil, value: nil)
        @label = label
        @max = max
        @min = min
        @value = value
      end
    end
  end
end
