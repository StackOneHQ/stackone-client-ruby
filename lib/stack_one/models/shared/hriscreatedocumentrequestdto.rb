# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class HrisCreateDocumentRequestDto < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # The content of the file
      field :content, ::StackOne::Shared::Content, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content') } }
      # The name of the file
      field :name, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('name') } }
      # The path where the file is stored
      field :path, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('path') } }
      # The content type of the document
      field :type, T.nilable(::StackOne::Shared::HrisCreateDocumentRequestDtoType), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('type') } }


      sig { params(content: ::StackOne::Shared::Content, name: ::String, path: T.nilable(::String), type: T.nilable(::StackOne::Shared::HrisCreateDocumentRequestDtoType)).void }
      def initialize(content: nil, name: nil, path: nil, type: nil)
        @content = content
        @name = name
        @path = path
        @type = type
      end
    end
  end
end
