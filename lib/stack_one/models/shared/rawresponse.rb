# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class RawResponse
        extend T::Sig
        include Crystalline::MetadataFields


        field :method, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('method') } }

        field :url, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('url') } }

        field :body, T.nilable(T.any(::String, T::Hash[Symbol, ::Object], T::Array[::Integer])), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('body') } }

        field :response, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('response') } }


        sig { params(method: ::String, url: ::String, body: T.nilable(T.any(::String, T::Hash[Symbol, ::Object], T::Array[::Integer])), response: T.nilable(T::Hash[Symbol, ::Object])).void }
        def initialize(method: nil, url: nil, body: nil, response: nil)
          @method = method
          @url = url
          @body = body
          @response = response
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @method == other.method
          return false unless @url == other.url
          return false unless @body == other.body
          return false unless @response == other.response
          true
        end
      end
    end
  end
end
