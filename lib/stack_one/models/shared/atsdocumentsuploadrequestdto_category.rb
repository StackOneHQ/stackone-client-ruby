# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    
      # The category to be associated with the file to be uploaded. Id will take precedence over name.
      class AtsDocumentsUploadRequestDtoCategory
        extend T::Sig
        include Crystalline::MetadataFields

        # The provider specific category for associating uploaded files, if provided, the value will be ignored.
        field :source_value, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('source_value') } }
        # The category name to associate with the file
        field :value, Crystalline::Nilable.new(Models::Shared::AtsDocumentsUploadRequestDtoValue), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('value'), 'decoder': Utils.enum_from_string(Models::Shared::AtsDocumentsUploadRequestDtoValue, true) } }

        sig { params(source_value: T.nilable(::String), value: T.nilable(Models::Shared::AtsDocumentsUploadRequestDtoValue)).void }
        def initialize(source_value: nil, value: nil)
          @source_value = source_value
          @value = value
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @source_value == other.source_value
          return false unless @value == other.value
          true
        end
      end
    end
  end
end
