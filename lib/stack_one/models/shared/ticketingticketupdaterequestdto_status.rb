# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    
      # Current status of the ticket
      class TicketingTicketUpdateRequestDtoStatus
        extend T::Sig
        include Crystalline::MetadataFields

        # The id of the ticket status.
        field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
        # The name of the ticket status.
        field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('name') } }
        # The type of this status
        field :type, T.nilable(Models::Shared::TicketingTicketUpdateRequestDtoType), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('type') } }


        sig { params(id: T.nilable(::String), name: T.nilable(::String), type: T.nilable(Models::Shared::TicketingTicketUpdateRequestDtoType)).void }
        def initialize(id: nil, name: nil, type: nil)
          @id = id
          @name = name
          @type = type
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @id == other.id
          return false unless @name == other.name
          return false unless @type == other.type
          true
        end
      end
    end
  end
end
