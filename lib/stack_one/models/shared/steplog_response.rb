# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    
      # The advanced log response data
      class StepLogResponse
        extend T::Sig
        include Crystalline::MetadataFields


        field :body, Crystalline::Nilable.new(::Object), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('body') } }
        # The custom mapping errors
        field :custom_mapping_errors, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::CustomMappingError)), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('custom_mapping_errors') } }

        field :headers, Crystalline::Nilable.new(Crystalline::Hash.new(Symbol, ::Object)), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('headers') } }
        # The provider errors
        field :provider_errors, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::ProviderError)), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('provider_errors') } }
        # The response status code
        field :status_code, Crystalline::Nilable.new(::Float), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('status_code') } }

        sig { params(body: T.nilable(::Object), custom_mapping_errors: T.nilable(T::Array[Models::Shared::CustomMappingError]), headers: T.nilable(T::Hash[Symbol, ::Object]), provider_errors: T.nilable(T::Array[Models::Shared::ProviderError]), status_code: T.nilable(::Float)).void }
        def initialize(body: nil, custom_mapping_errors: nil, headers: nil, provider_errors: nil, status_code: nil)
          @body = body
          @custom_mapping_errors = custom_mapping_errors
          @headers = headers
          @provider_errors = provider_errors
          @status_code = status_code
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @body == other.body
          return false unless @custom_mapping_errors == other.custom_mapping_errors
          return false unless @headers == other.headers
          return false unless @provider_errors == other.provider_errors
          return false unless @status_code == other.status_code
          true
        end
      end
    end
  end
end
