# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class UpdateTaskRequestDto
        extend T::Sig
        include Crystalline::MetadataFields

        # Comment or note about the task update
        field :comment, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('comment') } }
        # The status to apply to this Task
        field :status, Crystalline::Nilable.new(Models::Shared::UpdateTaskRequestDtoStatus), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('status') } }

        sig { params(comment: T.nilable(::String), status: T.nilable(Models::Shared::UpdateTaskRequestDtoStatus)).void }
        def initialize(comment: nil, status: nil)
          @comment = comment
          @status = status
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @comment == other.comment
          return false unless @status == other.status
          true
        end
      end
    end
  end
end
