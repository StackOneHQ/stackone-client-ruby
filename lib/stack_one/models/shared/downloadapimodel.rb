# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class DownloadApiModel
        extend T::Sig
        include Crystalline::MetadataFields

        # The file data in binary format
        field :data, ::String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('data'), required: true } }
        # Headers related to the download
        field :headers, Models::Shared::DownloadHeadersApiModel, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('headers'), required: true } }

        sig { params(data: ::String, headers: Models::Shared::DownloadHeadersApiModel).void }
        def initialize(data:, headers:)
          @data = data
          @headers = headers
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @data == other.data
          return false unless @headers == other.headers
          true
        end
      end
    end
  end
end
