# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    

      class Tag
        extend T::Sig
        include Crystalline::MetadataFields

        # Name of the tag
        field :name, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('name') } }
        # Remote ID of the tag
        field :remote_id, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('remote_id') } }

        sig { params(name: T.nilable(::String), remote_id: T.nilable(::String)).void }
        def initialize(name: nil, remote_id: nil)
          @name = name
          @remote_id = remote_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @name == other.name
          return false unless @remote_id == other.remote_id
          true
        end
      end
    end
  end
end
