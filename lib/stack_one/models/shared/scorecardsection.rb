# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class ScorecardSection < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # The fields within the section
      field :fields_, T.nilable(T::Array[::StackOne::Shared::Field]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('fields') } }
      # The ID of the section
      field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
      # The label of the section
      field :label, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('label') } }


      sig { params(fields_: T.nilable(T::Array[::StackOne::Shared::Field]), id: T.nilable(::String), label: T.nilable(::String)).void }
      def initialize(fields_: nil, id: nil, label: nil)
        @fields_ = fields_
        @id = id
        @label = label
      end
    end
  end
end
