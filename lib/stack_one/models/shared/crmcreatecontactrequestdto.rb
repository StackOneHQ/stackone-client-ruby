# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class CrmCreateContactRequestDto < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # List of associated account IDs
      field :account_ids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('account_ids') } }
      # The contact company name
      field :company_name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('company_name') } }
      # Contact custom fields
      field :custom_fields, T.nilable(T::Array[::StackOne::Shared::ContactsCustomFields]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('custom_fields') } }
      # List of associated deal IDs
      field :deal_ids, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('deal_ids') } }
      # List of contact email addresses
      field :emails, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('emails') } }
      # The contact first name
      field :first_name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('first_name') } }
      # The contact last name
      field :last_name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('last_name') } }
      # Value to pass through to the provider
      field :passthrough, T.nilable(T::Hash[Symbol, ::Object]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('passthrough') } }
      # List of contact phone numbers
      field :phone_numbers, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('phone_numbers') } }


      sig { params(account_ids: T.nilable(T::Array[::String]), company_name: T.nilable(::String), custom_fields: T.nilable(T::Array[::StackOne::Shared::ContactsCustomFields]), deal_ids: T.nilable(T::Array[::String]), emails: T.nilable(T::Array[::String]), first_name: T.nilable(::String), last_name: T.nilable(::String), passthrough: T.nilable(T::Hash[Symbol, ::Object]), phone_numbers: T.nilable(T::Array[::String])).void }
      def initialize(account_ids: nil, company_name: nil, custom_fields: nil, deal_ids: nil, emails: nil, first_name: nil, last_name: nil, passthrough: nil, phone_numbers: nil)
        @account_ids = account_ids
        @company_name = company_name
        @custom_fields = custom_fields
        @deal_ids = deal_ids
        @emails = emails
        @first_name = first_name
        @last_name = last_name
        @passthrough = passthrough
        @phone_numbers = phone_numbers
      end
    end
  end
end
