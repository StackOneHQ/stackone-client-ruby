# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Shared
  

    class BatchResultApiModel < ::StackOne::Utils::FieldAugmented
      extend T::Sig


      field :errors, T.nilable(T::Array[T::Array[::String]]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('errors') } }

      field :message, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('message') } }

      field :status_code, T.nilable(::Float), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('statusCode') } }

      field :timestamp, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('timestamp'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(errors: T.nilable(T::Array[T::Array[::String]]), message: T.nilable(::String), status_code: T.nilable(::Float), timestamp: T.nilable(::DateTime)).void }
      def initialize(errors: nil, message: nil, status_code: nil, timestamp: nil)
        @errors = errors
        @message = message
        @status_code = status_code
        @timestamp = timestamp
      end
    end
  end
end
