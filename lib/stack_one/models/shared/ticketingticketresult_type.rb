# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    
      # The type of the ticket
      class TicketingTicketResultType
        extend T::Sig
        include Crystalline::MetadataFields

        # The id of the ticket type.
        field :id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
        # The name of the ticket type.
        field :name, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('name') } }
        # The project the ticket type belongs to.
        field :project_id, T.nilable(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('project_id') } }


        sig { params(id: T.nilable(::String), name: T.nilable(::String), project_id: T.nilable(::String)).void }
        def initialize(id: nil, name: nil, project_id: nil)
          @id = id
          @name = name
          @project_id = project_id
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @id == other.id
          return false unless @name == other.name
          return false unless @project_id == other.project_id
          true
        end
      end
    end
  end
end
