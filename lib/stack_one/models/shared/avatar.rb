# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Shared
    
      # The employee avatar
      class Avatar
        extend T::Sig
        include Crystalline::MetadataFields


        field :base64, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('base64') } }

        field :url, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('url') } }

        sig { params(base64: T.nilable(::String), url: T.nilable(::String)).void }
        def initialize(base64: nil, url: nil)
          @base64 = base64
          @url = url
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @base64 == other.base64
          return false unless @url == other.url
          true
        end
      end
    end
  end
end
