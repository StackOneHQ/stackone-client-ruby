# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Operations
    
      # HRIS Time Off filters
      class HrisListEmployeeTimeOffRequestsQueryParamFilter
        extend T::Sig
        include Crystalline::MetadataFields

        # List of time off policy ids to filter by.
        field :policy_ids, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'query_param': { 'field_name': 'policy_ids' } }
        # Use a string with a date to only select results updated after that given date
        field :updated_after, Crystalline::Nilable.new(::DateTime), { 'query_param': { 'field_name': 'updated_after' } }

        sig { params(policy_ids: T.nilable(T::Array[::String]), updated_after: T.nilable(::DateTime)).void }
        def initialize(policy_ids: nil, updated_after: nil)
          @policy_ids = policy_ids
          @updated_after = updated_after
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @policy_ids == other.policy_ids
          return false unless @updated_after == other.updated_after
          true
        end
      end
    end
  end
end
