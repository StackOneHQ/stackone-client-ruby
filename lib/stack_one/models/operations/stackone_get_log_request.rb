# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Operations
    

      class StackoneGetLogRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :id, ::String, { 'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': false } }
        # The include parameter allows you to include additional data in the response.
        field :include, Crystalline::Nilable.new(Models::Operations::Include), { 'query_param': { 'field_name': 'include', 'style': 'form', 'explode': true } }

        sig { params(id: ::String, include: T.nilable(Models::Operations::Include)).void }
        def initialize(id:, include: nil)
          @id = id
          @include = include
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @id == other.id
          return false unless @include == other.include
          true
        end
      end
    end
  end
end
