# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Operations
    

      class StackoneUpdateAccountRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :patch_account_external_dto, Models::Shared::PatchAccountExternalDto, { 'request': { 'media_type': 'application/json' } }

        field :id, ::String, { 'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': false } }

        sig { params(patch_account_external_dto: Models::Shared::PatchAccountExternalDto, id: ::String).void }
        def initialize(patch_account_external_dto:, id:)
          @patch_account_external_dto = patch_account_external_dto
          @id = id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @patch_account_external_dto == other.patch_account_external_dto
          return false unless @id == other.id
          true
        end
      end
    end
  end
end
