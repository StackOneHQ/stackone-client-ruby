# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Operations
    
      # HRIS Time-Off Policies filters
      class HrisListTimeOffPoliciesQueryParamFilter
        extend T::Sig
        include Crystalline::MetadataFields

        # Filter to select time-off policies by type
        field :type, T.nilable(Models::Operations::QueryParamType), { 'query_param': { 'field_name': 'type' } }
        # Use a string with a date to only select results updated after that given date
        field :updated_after, T.nilable(::String), { 'query_param': { 'field_name': 'updated_after' } }


        sig { params(type: T.nilable(Models::Operations::QueryParamType), updated_after: T.nilable(::String)).void }
        def initialize(type: nil, updated_after: nil)
          @type = type
          @updated_after = updated_after
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @type == other.type
          return false unless @updated_after == other.updated_after
          true
        end
      end
    end
  end
end
