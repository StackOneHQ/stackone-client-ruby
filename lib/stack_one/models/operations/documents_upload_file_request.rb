# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module StackOne
  module Models
    module Operations
    

      class DocumentsUploadFileRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :unified_upload_request_dto, Models::Shared::UnifiedUploadRequestDto, { 'request': { 'media_type': 'application/json' } }
        # The account identifier
        field :x_account_id, ::String, { 'header': { 'field_name': 'x-account-id', 'style': 'simple', 'explode': false } }
        # The session token
        field :x_stackone_api_session_token, Crystalline::Nilable.new(::String), { 'header': { 'field_name': 'x-stackone-api-session-token', 'style': 'simple', 'explode': false } }

        sig { params(unified_upload_request_dto: Models::Shared::UnifiedUploadRequestDto, x_account_id: ::String, x_stackone_api_session_token: T.nilable(::String)).void }
        def initialize(unified_upload_request_dto:, x_account_id:, x_stackone_api_session_token: nil)
          @unified_upload_request_dto = unified_upload_request_dto
          @x_account_id = x_account_id
          @x_stackone_api_session_token = x_stackone_api_session_token
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @unified_upload_request_dto == other.unified_upload_request_dto
          return false unless @x_account_id == other.x_account_id
          return false unless @x_stackone_api_session_token == other.x_stackone_api_session_token
          true
        end
      end
    end
  end
end
