# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared

    class Credentials < StackOne::Utils::FieldAugmented
      extend T::Sig



      
      def initialize; end
    end


    class SetupInformation < StackOne::Utils::FieldAugmented
      extend T::Sig



      
      def initialize; end
    end


    class LinkedAccount < StackOne::Utils::FieldAugmented
      extend T::Sig


      field :active, T::Boolean, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('active') } }

      field :created_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(false) } }

      field :id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }

      field :origin_owner_id, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('origin_owner_id') } }

      field :origin_owner_name, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('origin_owner_name') } }

      field :provider, String, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('provider') } }

      field :updated_at, DateTime, { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(false) } }

      field :credentials, T.nilable(Shared::Credentials), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('credentials') } }

      field :label, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('label') } }

      field :origin_username, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('origin_username') } }

      field :setup_information, T.nilable(Shared::SetupInformation), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('setup_information') } }


      sig { params(active: T::Boolean, created_at: DateTime, id: String, origin_owner_id: String, origin_owner_name: String, provider: String, updated_at: DateTime, credentials: T.nilable(Shared::Credentials), label: T.nilable(String), origin_username: T.nilable(String), setup_information: T.nilable(Shared::SetupInformation)).void }
      def initialize(active: nil, created_at: nil, id: nil, origin_owner_id: nil, origin_owner_name: nil, provider: nil, updated_at: nil, credentials: nil, label: nil, origin_username: nil, setup_information: nil)
        @active = active
        @created_at = created_at
        @id = id
        @origin_owner_id = origin_owner_id
        @origin_owner_name = origin_owner_name
        @provider = provider
        @updated_at = updated_at
        @credentials = credentials
        @label = label
        @origin_username = origin_username
        @setup_information = setup_information
      end
    end
  end
end
