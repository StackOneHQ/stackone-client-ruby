# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared
    # AnswerValue - The type of the answer.
    class AnswerValue < T::Enum
      enums do
        SHORT_TEXT = new('short_text')
        LONG_TEXT = new('long_text')
        ATTACHMENT = new('attachment')
        MULTI_SELECT = new('multi_select')
        SINGLE_SELECT = new('single_select')
        BOOLEAN = new('boolean')
        NUMBER = new('number')
        DATE = new('date')
        VIDEO = new('video')
      end
    end


    # Type of the answer
    class Type < StackOne::Utils::FieldAugmented
      extend T::Sig

      # The source value of the answer type.
      field :source_value, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('source_value') } }
      # The type of the answer.
      field :value, T.nilable(Shared::AnswerValue), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('value'), 'decoder': Utils.enum_from_string(Shared::AnswerValue, true) } }


      sig { params(source_value: T.nilable(String), value: T.nilable(Shared::AnswerValue)).void }
      def initialize(source_value: nil, value: nil)
        @source_value = source_value
        @value = value
      end
    end


    class Answer < StackOne::Utils::FieldAugmented
      extend T::Sig

      # Values of the answer
      field :values, T::Array[String], { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('values') } }
      # Unique identifier of the answer
      field :id, T.nilable(String), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('id') } }
      # Type of the answer
      field :type, T.nilable(Shared::Type), { 'format_json': { 'letter_case': OpenApiSDK::Utils.field_name('type') } }


      sig { params(values: T::Array[String], id: T.nilable(String), type: T.nilable(Shared::Type)).void }
      def initialize(values: nil, id: nil, type: nil)
        @values = values
        @id = id
        @type = type
      end
    end
  end
end
