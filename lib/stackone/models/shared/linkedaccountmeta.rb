# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared

    class LinkedAccountMetaCategory < T::Enum
      enums do
        ATS = new('ats')
        HRIS = new('hris')
        HRIS_LEGACY = new('hris-legacy')
        CRM = new('crm')
        MARKETING = new('marketing')
        STACKONE = new('stackone')
      end
    end



    class LinkedAccountMeta < ::StackOne::Utils::FieldAugmented
      extend T::Sig


      field :category, Shared::LinkedAccountMetaCategory, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('category'), 'decoder': Utils.enum_from_string(Shared::LinkedAccountMetaCategory, false) } }

      field :models, T::Hash[Symbol, Object], { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('models') } }

      field :provider, String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('provider') } }


      sig { params(category: Shared::LinkedAccountMetaCategory, models: T::Hash[Symbol, Object], provider: String).void }
      def initialize(category: nil, models: nil, provider: nil)
        @category = category
        @models = models
        @provider = provider
      end
    end
  end
end
