# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared

    class OfferHistory < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # Start Date of the offer
      field :start_date, DateTime, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('start_date'), 'decoder': Utils.datetime_from_iso_format(false) } }
      # Date of creation
      field :created_at, T.nilable(DateTime), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :currency, T.nilable(String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('currency') } }

      field :salary, T.nilable(Float), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('salary') } }
      # Date of last update
      field :updated_at, T.nilable(DateTime), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(start_date: DateTime, created_at: T.nilable(DateTime), currency: T.nilable(String), salary: T.nilable(Float), updated_at: T.nilable(DateTime)).void }
      def initialize(start_date: nil, created_at: nil, currency: nil, salary: nil, updated_at: nil)
        @start_date = start_date
        @created_at = created_at
        @currency = currency
        @salary = salary
        @updated_at = updated_at
      end
    end
  end
end
