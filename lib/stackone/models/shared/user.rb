# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared

    class User < ::StackOne::Utils::FieldAugmented
      extend T::Sig


      field :email, String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('email') } }

      field :id, String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }

      field :first_name, T.nilable(String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('first_name') } }

      field :last_name, T.nilable(String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('last_name') } }

      field :name, T.nilable(String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('name') } }

      field :phone, T.nilable(String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('phone') } }


      sig { params(email: String, id: String, first_name: T.nilable(String), last_name: T.nilable(String), name: T.nilable(String), phone: T.nilable(String)).void }
      def initialize(email: nil, id: nil, first_name: nil, last_name: nil, name: nil, phone: nil)
        @email = email
        @id = id
        @first_name = first_name
        @last_name = last_name
        @name = name
        @phone = phone
      end
    end
  end
end
