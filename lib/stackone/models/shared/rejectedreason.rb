# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/rejectedreasontypeenum'

module StackOne
  module Shared

    class RejectedReason < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # The ID of the rejected reason.
      field :id, String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('id') } }
      # The label of the rejected reason.
      field :label, String, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('label') } }

      field :rejected_reason_type, Shared::RejectedReasonTypeEnum, { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('rejected_reason_type') } }


      sig { params(id: String, label: String, rejected_reason_type: Shared::RejectedReasonTypeEnum).void }
      def initialize(id: nil, label: nil, rejected_reason_type: nil)
        @id = id
        @label = label
        @rejected_reason_type = rejected_reason_type
      end
    end
  end
end
