# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared

    class FileFormatEnumValue < T::Enum
      enums do
        PDF = new('pdf')
        JPG = new('jpg')
        CSV = new('csv')
        XLSX = new('xlsx')
        XLS = new('xls')
        PPT = new('ppt')
        PNG = new('png')
        DOC = new('doc')
        HTM = new('htm')
        MLE = new('mle')
        RTF = new('rtf')
        BMP = new('bmp')
        DOCX = new('docx')
        PPTX = new('pptx')
        TXT = new('txt')
        JPEG = new('jpeg')
        UNMAPPED_VALUE = new('unmapped_value')
      end
    end



    class FileFormatEnum < ::StackOne::Utils::FieldAugmented
      extend T::Sig


      field :source_value, T.nilable(Object), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('source_value') } }

      field :value, T.nilable(Shared::FileFormatEnumValue), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('value'), 'decoder': Utils.enum_from_string(Shared::FileFormatEnumValue, true) } }


      sig { params(source_value: T.nilable(Object), value: T.nilable(Shared::FileFormatEnumValue)).void }
      def initialize(source_value: nil, value: nil)
        @source_value = source_value
        @value = value
      end
    end
  end
end
