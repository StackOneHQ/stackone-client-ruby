# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module StackOne
  module Shared
    # AtsCreateNotesRequestDtoValue - The visibility of the notes.
    class AtsCreateNotesRequestDtoValue < T::Enum
      enums do
        PRIVATE = new('private')
        PUBLIC = new('public')
      end
    end


    # Visibility of the note
    class Visibility < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # The source value of the notes visibility.
      field :source_value, T.nilable(Object), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('source_value') } }
      # The visibility of the notes.
      field :value, T.nilable(Shared::AtsCreateNotesRequestDtoValue), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('value'), 'decoder': Utils.enum_from_string(Shared::AtsCreateNotesRequestDtoValue, true) } }


      sig { params(source_value: T.nilable(Object), value: T.nilable(Shared::AtsCreateNotesRequestDtoValue)).void }
      def initialize(source_value: nil, value: nil)
        @source_value = source_value
        @value = value
      end
    end


    class AtsCreateNotesRequestDto < ::StackOne::Utils::FieldAugmented
      extend T::Sig

      # Unique identifier of the author
      field :author_id, T.nilable(String), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('author_id') } }

      field :content, T.nilable(T::Array[Shared::NoteContentApiModel]), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('content') } }
      # Visibility of the note
      field :visibility, T.nilable(Shared::Visibility), { 'format_json': { 'letter_case': ::StackOne::Utils.field_name('visibility') } }


      sig { params(author_id: T.nilable(String), content: T.nilable(T::Array[Shared::NoteContentApiModel]), visibility: T.nilable(Shared::Visibility)).void }
      def initialize(author_id: nil, content: nil, visibility: nil)
        @author_id = author_id
        @content = content
        @visibility = visibility
      end
    end
  end
end
